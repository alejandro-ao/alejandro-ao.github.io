<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Alejandro AO - Coding Knowledge Base</title><link>/blog/posts/</link><description>Recent content in Posts on Alejandro AO - Coding Knowledge Base</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 15 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Custom Post Types and Taxonomies in Wordpress</title><link>/blog/posts/06-cpt/</link><pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate><guid>/blog/posts/06-cpt/</guid><description>Custom Post Types (CPT) in Wordpress are just like blog posts, except that you can manipulate them to make them correspond to any type of publication you want.
For example, let’s say that you have a website where you publish movie reviews. In this case, instead of using the default post type of “blog post” you can create a CPT with the name of movie review.
This post type would probably have other fields, other than content and thumbnail.</description></item><item><title>How to display Recent posts in Wordpress</title><link>/blog/posts/05-display-posts/</link><pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate><guid>/blog/posts/05-display-posts/</guid><description>When working within the Wordpress framework you will soon be confronted with the necessity of displaying the posts that are saved in your database. Be it for an archive page or because you want to display your latest posts in your homepage.
Remember that when I talk about Wordpress posts, I do not necessarily mean that we are talking about a conventional blog. Wordpress has grown to be more than a blogging platform.</description></item><item><title>How to create short-codes in Wordpress</title><link>/blog/posts/04-shortcodes/</link><pubDate>Tue, 15 Feb 2022 00:00:00 +0000</pubDate><guid>/blog/posts/04-shortcodes/</guid><description>Short-codes are one of the signatures of Wordpress. They allow you to add functionalities to your website by just adding a few characters in the following format: [my-shortcode].
Sometimes, you will be asked to add them to your website by some plugins.
For example, WP Forms provides you with a custom short-code like this one: [wpforms id=&amp;quot;25”] for each form that you build using your plugin. You will then add this anywhere you want your form to appear.</description></item><item><title>How to add a favicon to your Wordpress website</title><link>/blog/posts/03-favicons/</link><pubDate>Sat, 15 Jan 2022 00:00:00 +0000</pubDate><guid>/blog/posts/03-favicons/</guid><description>There are better and worse ways to add a favicon to your Wordpress website. In regular websites, all you would need to do to add a favicon is to add the following tag to your header:
&amp;lt;link rel=&amp;#34;icon&amp;#34; href=&amp;#34;url-of-your-favicon.ico&amp;#34;/&amp;gt; We could, of course, just plug this tag to our website’s header. But that wouldn’t be the Wordpress way of doing things.
How to add a favicon the Wordpress way The better way of doing this in Wordpress is by adding it to our Wordpress cycle.</description></item><item><title>How to enqueue styles and scripts in Wordpress</title><link>/blog/posts/02-enqueing-styles-and-scripts/</link><pubDate>Wed, 15 Dec 2021 00:00:00 +0000</pubDate><guid>/blog/posts/02-enqueing-styles-and-scripts/</guid><description>How to enqueue scripts and styles in Wordpress As you might know, when we are using Wordpress, we don’t add our scripts and styles directly in the header like this:
&amp;lt;script src=&amp;#34;my_script.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; Of course, you can do it that way, but there is another way, the right way.
The right way to add any dependencies on Wordpress, be it scripts or stylesheets, is to enqueue them in the Wordpress cycle. The reason for this is that Wordpress itself includes different scripts and stylesheets when it loads.</description></item><item><title>How to create a child theme in Wordpress with code</title><link>/blog/posts/01-how-to-create-a-child-theme/</link><pubDate>Mon, 15 Nov 2021 00:00:00 +0000</pubDate><guid>/blog/posts/01-how-to-create-a-child-theme/</guid><description>Creating a child-theme in Wordpress is extremely useful. It allows you to modify your theme while still getting updates to that theme.
What is a child-theme in Wordpress? Imagine you have a very nice theme, but you would like to add a certain feature that does not come with it by default.
An intuitive approach could be to go to your theme files and add the feature yourself. But if you did that, any update to your theme would erase your custom feature.</description></item></channel></rss>