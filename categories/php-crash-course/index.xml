<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PHP Crash Course on Alejandro AO - Coding Knowledge Base</title><link>https://aavila0707.github.io/categories/php-crash-course/</link><description>Recent content in PHP Crash Course on Alejandro AO - Coding Knowledge Base</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 19 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://aavila0707.github.io/categories/php-crash-course/index.xml" rel="self" type="application/rss+xml"/><item><title>The foreach loop in PHP</title><link>https://aavila0707.github.io/posts/php/05-iterations-in-php/</link><pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate><guid>https://aavila0707.github.io/posts/php/05-iterations-in-php/</guid><description>Arrays are probably one of the structures that you will work the most with. They exist for one main reason: to be able to iterate through their elements and perform operations with them. The easiest way to iterate through arrays in PHP is using the foreach loop.
The syntax foreach loops look like similar to functions in their declaration method. Here is the syntax:
$states = [&amp;#39;Alabama&amp;#39;, &amp;#39;Texas&amp;#39;, &amp;#39;California&amp;#39;]; foreach ($states as $state) { echo $state; } Foreach loops take every single element in your array and perform the same operation on them.</description></item><item><title>Variables, constants and data types in PHP</title><link>https://aavila0707.github.io/posts/php/04-data-types-in-php/</link><pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate><guid>https://aavila0707.github.io/posts/php/04-data-types-in-php/</guid><description>Variables and constants in PHP are preceded by the dollar sign $. Convention dictates that you should define your constants with uppercase and your variables with camelCase. Here is how you declare variables and constants :
// to create a variable $myVariable = 23; // this assigns the value 23 to your variable // to create a constant define(&amp;#34;MY_CONSTANT&amp;#34;, &amp;#34;This is the value of my constant&amp;#34;); With constants, there is a third parameter that takes a boolean value to set if your constant is case-sensitive or not.</description></item><item><title>How to install PHP in your local computer</title><link>https://aavila0707.github.io/posts/php/03-how-to-install-php/</link><pubDate>Tue, 12 Apr 2022 00:00:00 +0000</pubDate><guid>https://aavila0707.github.io/posts/php/03-how-to-install-php/</guid><description>As we mentioned before, PHP is a server-side language. This means that it is made to run in a server and not in a local computer. So, in order to run it in your local computer, you need to simulate a server at home.
This is extremely easy. There are several softwares that allow you to run PHP locally. The one that I would recommend for beginners is MAMP (you can also install LAMP if you&amp;rsquo;re using Linux).</description></item><item><title>What is a server-side language?</title><link>https://aavila0707.github.io/posts/php/02-what-is-a-server-side-language/</link><pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate><guid>https://aavila0707.github.io/posts/php/02-what-is-a-server-side-language/</guid><description>To understand what it means when you say that a language is &amp;ldquo;server-side&amp;rdquo;, we first need to understand that there are two places where your code can be compiled in web development: client-side and server-side.
Client-side languages The first type of programming languages for the web are client-side programming languages. This means that they run on the browser of the people visiting our website (a.k.a. the client). In other words, let&amp;rsquo;s say you put your website code in your server and someone wants to visit your website.</description></item><item><title>Why should I learn PHP?</title><link>https://aavila0707.github.io/posts/php/01-why-learn-php/</link><pubDate>Sun, 03 Apr 2022 00:00:00 +0000</pubDate><guid>https://aavila0707.github.io/posts/php/01-why-learn-php/</guid><description>Let&amp;rsquo;s talk about PHP. More precisely, why it is a language that every web developer should know and what makes it so important.
Even though there is a huge amount of people that hate it or dislike it (myself included in the latter category) it is noble to recognise its importance. After all, it powers nearly 80% of all websites on the internet. Not so insignificant after all, right?
What is special about PHP ?</description></item></channel></rss>